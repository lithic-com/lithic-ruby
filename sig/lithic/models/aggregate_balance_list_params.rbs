module Lithic
  module Models
    type aggregate_balance_list_params =
      {
        financial_account_type: Lithic::Models::AggregateBalanceListParams::financial_account_type
      }
      & Lithic::request_parameters

    class AggregateBalanceListParams < Lithic::BaseModel
      extend Lithic::RequestParameters::Converter
      include Lithic::RequestParameters

      attr_reader financial_account_type: Lithic::Models::AggregateBalanceListParams::financial_account_type?

      def financial_account_type=: (
        Lithic::Models::AggregateBalanceListParams::financial_account_type
      ) -> Lithic::Models::AggregateBalanceListParams::financial_account_type

      def initialize: (
        ?financial_account_type: Lithic::Models::AggregateBalanceListParams::financial_account_type,
        ?request_options: Lithic::request_opts
      ) -> void

      def to_hash: -> Lithic::Models::aggregate_balance_list_params

      type financial_account_type = :ISSUING | :OPERATING | :RESERVE

      module FinancialAccountType
        extend Lithic::Enum

        ISSUING: :ISSUING
        OPERATING: :OPERATING
        RESERVE: :RESERVE

        def self?.values: -> ::Array[Lithic::Models::AggregateBalanceListParams::financial_account_type]
      end
    end
  end
end
