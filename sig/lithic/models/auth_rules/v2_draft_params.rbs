module Lithic
  module Models
    module AuthRules
      type v2_draft_params =
        { parameters: Lithic::Models::AuthRules::V2DraftParams::parameters? }
        & Lithic::Internal::Type::request_parameters

      class V2DraftParams < Lithic::Internal::Type::BaseModel
        extend Lithic::Internal::Type::RequestParameters::Converter
        include Lithic::Internal::Type::RequestParameters

        attr_accessor parameters: Lithic::Models::AuthRules::V2DraftParams::parameters?

        def initialize: (
          ?parameters: Lithic::Models::AuthRules::V2DraftParams::parameters?,
          ?request_options: Lithic::request_opts
        ) -> void

        def to_hash: -> Lithic::Models::AuthRules::v2_draft_params

        type parameters =
          Lithic::Models::AuthRules::ConditionalBlockParameters
          | Lithic::Models::AuthRules::VelocityLimitParams
          | Lithic::Models::AuthRules::V2DraftParams::Parameters::MerchantLockParameters

        module Parameters
          extend Lithic::Internal::Type::Union

          type merchant_lock_parameters =
            {
              merchants: ::Array[Lithic::Models::AuthRules::V2DraftParams::Parameters::MerchantLockParameters::Merchant]
            }

          class MerchantLockParameters < Lithic::Internal::Type::BaseModel
            attr_accessor merchants: ::Array[Lithic::Models::AuthRules::V2DraftParams::Parameters::MerchantLockParameters::Merchant]

            def initialize: (
              merchants: ::Array[Lithic::Models::AuthRules::V2DraftParams::Parameters::MerchantLockParameters::Merchant]
            ) -> void

            def to_hash: -> Lithic::Models::AuthRules::V2DraftParams::Parameters::merchant_lock_parameters

            type merchant =
              { comment: String, descriptor: String, merchant_id: String }

            class Merchant < Lithic::Internal::Type::BaseModel
              attr_reader comment: String?

              def comment=: (String) -> String

              attr_reader descriptor: String?

              def descriptor=: (String) -> String

              attr_reader merchant_id: String?

              def merchant_id=: (String) -> String

              def initialize: (
                ?comment: String,
                ?descriptor: String,
                ?merchant_id: String
              ) -> void

              def to_hash: -> Lithic::Models::AuthRules::V2DraftParams::Parameters::MerchantLockParameters::merchant
            end
          end

          def self?.variants: -> [Lithic::Models::AuthRules::ConditionalBlockParameters, Lithic::Models::AuthRules::VelocityLimitParams, Lithic::Models::AuthRules::V2DraftParams::Parameters::MerchantLockParameters]
        end
      end
    end
  end
end
