module Lithic
  module Models
    module AuthRules
      type v2_apply_params =
        {
          account_tokens: ::Array[String],
          card_tokens: ::Array[String],
          program_level: bool,
          excluded_card_tokens: ::Array[String]
        }
        & Lithic::request_parameters

      class V2ApplyParams < Lithic::BaseModel
        extend Lithic::RequestParameters::Converter
        include Lithic::RequestParameters

        attr_accessor account_tokens: ::Array[String]

        attr_accessor card_tokens: ::Array[String]

        attr_accessor program_level: bool

        attr_reader excluded_card_tokens: ::Array[String]?

        def excluded_card_tokens=: (::Array[String]) -> ::Array[String]

        def initialize: (
          account_tokens: ::Array[String],
          card_tokens: ::Array[String],
          program_level: bool,
          ?excluded_card_tokens: ::Array[String],
          ?request_options: Lithic::request_opts
        ) -> void

        def to_hash: -> Lithic::Models::AuthRules::v2_apply_params
      end
    end
  end
end
