module Lithic
  module Models
    module AuthRules
      type v2_list_params =
        {
          account_token: String,
          card_token: String,
          ending_before: String,
          event_stream: Lithic::Models::AuthRules::V2ListParams::event_stream,
          page_size: Integer,
          scope: Lithic::Models::AuthRules::V2ListParams::scope,
          starting_after: String
        }
        & Lithic::Internal::Type::request_parameters

      class V2ListParams < Lithic::Internal::Type::BaseModel
        extend Lithic::Internal::Type::RequestParameters::Converter
        include Lithic::Internal::Type::RequestParameters

        attr_reader account_token: String?

        def account_token=: (String) -> String

        attr_reader card_token: String?

        def card_token=: (String) -> String

        attr_reader ending_before: String?

        def ending_before=: (String) -> String

        attr_reader event_stream: Lithic::Models::AuthRules::V2ListParams::event_stream?

        def event_stream=: (
          Lithic::Models::AuthRules::V2ListParams::event_stream
        ) -> Lithic::Models::AuthRules::V2ListParams::event_stream

        attr_reader page_size: Integer?

        def page_size=: (Integer) -> Integer

        attr_reader scope: Lithic::Models::AuthRules::V2ListParams::scope?

        def scope=: (
          Lithic::Models::AuthRules::V2ListParams::scope
        ) -> Lithic::Models::AuthRules::V2ListParams::scope

        attr_reader starting_after: String?

        def starting_after=: (String) -> String

        def initialize: (
          ?account_token: String,
          ?card_token: String,
          ?ending_before: String,
          ?event_stream: Lithic::Models::AuthRules::V2ListParams::event_stream,
          ?page_size: Integer,
          ?scope: Lithic::Models::AuthRules::V2ListParams::scope,
          ?starting_after: String,
          ?request_options: Lithic::request_opts
        ) -> void

        def to_hash: -> {
          account_token: String,
          card_token: String,
          ending_before: String,
          event_stream: Lithic::Models::AuthRules::V2ListParams::event_stream,
          page_size: Integer,
          scope: Lithic::Models::AuthRules::V2ListParams::scope,
          starting_after: String,
          request_options: Lithic::RequestOptions
        }

        type event_stream = :AUTHORIZATION | :THREE_DS_AUTHENTICATION

        module EventStream
          extend Lithic::Internal::Type::Enum

          AUTHORIZATION: :AUTHORIZATION
          THREE_DS_AUTHENTICATION: :THREE_DS_AUTHENTICATION

          def self?.values: -> ::Array[Lithic::Models::AuthRules::V2ListParams::event_stream]
        end

        type scope = :PROGRAM | :ACCOUNT | :CARD

        module Scope
          extend Lithic::Internal::Type::Enum

          PROGRAM: :PROGRAM
          ACCOUNT: :ACCOUNT
          CARD: :CARD

          def self?.values: -> ::Array[Lithic::Models::AuthRules::V2ListParams::scope]
        end
      end
    end
  end
end
