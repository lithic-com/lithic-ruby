module Lithic
  module Models
    class AuthRule = AuthRules::AuthRule

    module AuthRules
      type auth_rule =
        {
          token: String,
          state: Lithic::AuthRules::AuthRule::state,
          account_tokens: ::Array[String],
          allowed_countries: ::Array[String],
          allowed_mcc: ::Array[String],
          blocked_countries: ::Array[String],
          blocked_mcc: ::Array[String],
          card_tokens: ::Array[String],
          program_level: bool
        }

      class AuthRule < Lithic::Internal::Type::BaseModel
        attr_accessor token: String

        attr_accessor state: Lithic::AuthRules::AuthRule::state

        attr_reader account_tokens: ::Array[String]?

        def account_tokens=: (::Array[String]) -> ::Array[String]

        attr_reader allowed_countries: ::Array[String]?

        def allowed_countries=: (::Array[String]) -> ::Array[String]

        attr_reader allowed_mcc: ::Array[String]?

        def allowed_mcc=: (::Array[String]) -> ::Array[String]

        attr_reader blocked_countries: ::Array[String]?

        def blocked_countries=: (::Array[String]) -> ::Array[String]

        attr_reader blocked_mcc: ::Array[String]?

        def blocked_mcc=: (::Array[String]) -> ::Array[String]

        attr_reader card_tokens: ::Array[String]?

        def card_tokens=: (::Array[String]) -> ::Array[String]

        attr_reader program_level: bool?

        def program_level=: (bool) -> bool

        def initialize: (
          token: String,
          state: Lithic::AuthRules::AuthRule::state,
          ?account_tokens: ::Array[String],
          ?allowed_countries: ::Array[String],
          ?allowed_mcc: ::Array[String],
          ?blocked_countries: ::Array[String],
          ?blocked_mcc: ::Array[String],
          ?card_tokens: ::Array[String],
          ?program_level: bool
        ) -> void

        type state = :ACTIVE | :INACTIVE

        module State
          extend Lithic::Internal::Type::Enum

          ACTIVE: :ACTIVE
          INACTIVE: :INACTIVE

          def self?.values: -> ::Array[Lithic::AuthRules::AuthRule::state]
        end
      end
    end
  end
end
