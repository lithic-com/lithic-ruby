module Lithic
  module Models
    module Cards
      type aggregate_balance_list_response =
        {
          available_amount: Integer,
          created: Time,
          currency: String,
          last_card_token: String,
          last_transaction_event_token: String,
          last_transaction_token: String,
          pending_amount: Integer,
          total_amount: Integer,
          updated: Time
        }

      class AggregateBalanceListResponse < Lithic::Internal::Type::BaseModel
        attr_accessor available_amount: Integer

        attr_accessor created: Time

        attr_accessor currency: String

        attr_accessor last_card_token: String

        attr_accessor last_transaction_event_token: String

        attr_accessor last_transaction_token: String

        attr_accessor pending_amount: Integer

        attr_accessor total_amount: Integer

        attr_accessor updated: Time

        def initialize: (
          available_amount: Integer,
          created: Time,
          currency: String,
          last_card_token: String,
          last_transaction_event_token: String,
          last_transaction_token: String,
          pending_amount: Integer,
          total_amount: Integer,
          updated: Time
        ) -> void

        def to_hash: -> {
          available_amount: Integer,
          created: Time,
          currency: String,
          last_card_token: String,
          last_transaction_event_token: String,
          last_transaction_token: String,
          pending_amount: Integer,
          total_amount: Integer,
          updated: Time
        }
      end
    end
  end
end
