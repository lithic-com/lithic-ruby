module Lithic
  module Models
    type transaction_simulate_credit_authorization_params =
      {
        amount: Integer,
        descriptor: String,
        pan: String,
        mcc: String,
        merchant_acceptor_id: String
      }
      & Lithic::request_parameters

    class TransactionSimulateCreditAuthorizationParams < Lithic::BaseModel
      extend Lithic::Type::RequestParameters::Converter
      include Lithic::RequestParameters

      attr_accessor amount: Integer

      attr_accessor descriptor: String

      attr_accessor pan: String

      attr_reader mcc: String?

      def mcc=: (String) -> String

      attr_reader merchant_acceptor_id: String?

      def merchant_acceptor_id=: (String) -> String

      def initialize: (
        amount: Integer,
        descriptor: String,
        pan: String,
        ?mcc: String,
        ?merchant_acceptor_id: String,
        ?request_options: Lithic::request_opts
      ) -> void

      def to_hash: -> Lithic::Models::transaction_simulate_credit_authorization_params
    end
  end
end
