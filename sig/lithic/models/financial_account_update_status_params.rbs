module Lithic
  module Models
    type financial_account_update_status_params =
      {
        status: Lithic::Models::FinancialAccountUpdateStatusParams::status,
        status_change_reason: Lithic::Models::FinancialAccountUpdateStatusParams::status_change_reason?
      }
      & Lithic::request_parameters

    class FinancialAccountUpdateStatusParams < Lithic::BaseModel
      extend Lithic::RequestParameters::Converter
      include Lithic::RequestParameters

      attr_accessor status: Lithic::Models::FinancialAccountUpdateStatusParams::status

      attr_accessor status_change_reason: Lithic::Models::FinancialAccountUpdateStatusParams::status_change_reason?

      def initialize: (
        status: Lithic::Models::FinancialAccountUpdateStatusParams::status,
        status_change_reason: Lithic::Models::FinancialAccountUpdateStatusParams::status_change_reason?,
        ?request_options: Lithic::request_opts
      ) -> void

      def to_hash: -> Lithic::Models::financial_account_update_status_params

      type status = :OPEN | :CLOSED | :SUSPENDED | :PENDING

      class Status < Lithic::Enum
        OPEN: :OPEN
        CLOSED: :CLOSED
        SUSPENDED: :SUSPENDED
        PENDING: :PENDING

        def self.values: -> ::Array[Lithic::Models::FinancialAccountUpdateStatusParams::status]
      end

      type status_change_reason =
        :CHARGED_OFF_FRAUD
        | :END_USER_REQUEST
        | :BANK_REQUEST
        | :CHARGED_OFF_DELINQUENT

      class StatusChangeReason < Lithic::Enum
        CHARGED_OFF_FRAUD: :CHARGED_OFF_FRAUD
        END_USER_REQUEST: :END_USER_REQUEST
        BANK_REQUEST: :BANK_REQUEST
        CHARGED_OFF_DELINQUENT: :CHARGED_OFF_DELINQUENT

        def self.values: -> ::Array[Lithic::Models::FinancialAccountUpdateStatusParams::status_change_reason]
      end
    end
  end
end
