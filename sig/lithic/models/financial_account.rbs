module Lithic
  module Models
    type financial_account =
      {
        token: String,
        account_token: String?,
        created: Time,
        credit_configuration: Lithic::Models::FinancialAccount::CreditConfiguration?,
        is_for_benefit_of: bool,
        nickname: String?,
        status: Lithic::Models::FinancialAccount::status,
        type: Lithic::Models::FinancialAccount::type_,
        updated: Time,
        account_number: String?,
        routing_number: String?,
        status_change_reason: Lithic::Models::FinancialAccount::status_change_reason?
      }

    class FinancialAccount < Lithic::BaseModel
      attr_accessor token: String

      attr_accessor account_token: String?

      attr_accessor created: Time

      attr_accessor credit_configuration: Lithic::Models::FinancialAccount::CreditConfiguration?

      attr_accessor is_for_benefit_of: bool

      attr_accessor nickname: String?

      attr_accessor status: Lithic::Models::FinancialAccount::status

      attr_accessor type: Lithic::Models::FinancialAccount::type_

      attr_accessor updated: Time

      attr_accessor account_number: String?

      attr_accessor routing_number: String?

      attr_accessor status_change_reason: Lithic::Models::FinancialAccount::status_change_reason?

      def initialize: (
        token: String,
        account_token: String?,
        created: Time,
        credit_configuration: Lithic::Models::FinancialAccount::CreditConfiguration?,
        is_for_benefit_of: bool,
        nickname: String?,
        status: Lithic::Models::FinancialAccount::status,
        type: Lithic::Models::FinancialAccount::type_,
        updated: Time,
        ?account_number: String?,
        ?routing_number: String?,
        ?status_change_reason: Lithic::Models::FinancialAccount::status_change_reason?
      ) -> void

      def to_hash: -> Lithic::Models::financial_account

      type credit_configuration =
        {
          charged_off_reason: Lithic::Models::FinancialAccount::CreditConfiguration::charged_off_reason?,
          credit_limit: Integer?,
          credit_product_token: String?,
          external_bank_account_token: String?,
          financial_account_state: Lithic::Models::FinancialAccount::CreditConfiguration::financial_account_state?,
          is_spend_blocked: bool,
          tier: String?
        }

      class CreditConfiguration < Lithic::BaseModel
        attr_accessor charged_off_reason: Lithic::Models::FinancialAccount::CreditConfiguration::charged_off_reason?

        attr_accessor credit_limit: Integer?

        attr_accessor credit_product_token: String?

        attr_accessor external_bank_account_token: String?

        attr_accessor financial_account_state: Lithic::Models::FinancialAccount::CreditConfiguration::financial_account_state?

        attr_accessor is_spend_blocked: bool

        attr_accessor tier: String?

        def initialize: (
          charged_off_reason: Lithic::Models::FinancialAccount::CreditConfiguration::charged_off_reason?,
          credit_limit: Integer?,
          credit_product_token: String?,
          external_bank_account_token: String?,
          financial_account_state: Lithic::Models::FinancialAccount::CreditConfiguration::financial_account_state?,
          is_spend_blocked: bool,
          tier: String?
        ) -> void

        def to_hash: -> Lithic::Models::FinancialAccount::credit_configuration

        type charged_off_reason = :DELINQUENT | :FRAUD

        class ChargedOffReason < Lithic::Enum
          DELINQUENT: :DELINQUENT
          FRAUD: :FRAUD

          def self.values: -> ::Array[Lithic::Models::FinancialAccount::CreditConfiguration::charged_off_reason]
        end

        type financial_account_state =
          :PENDING | :CURRENT | :DELINQUENT | :CHARGED_OFF

        class FinancialAccountState < Lithic::Enum
          PENDING: :PENDING
          CURRENT: :CURRENT
          DELINQUENT: :DELINQUENT
          CHARGED_OFF: :CHARGED_OFF

          def self.values: -> ::Array[Lithic::Models::FinancialAccount::CreditConfiguration::financial_account_state]
        end
      end

      type status = :OPEN | :CLOSED | :SUSPENDED | :PENDING

      class Status < Lithic::Enum
        OPEN: :OPEN
        CLOSED: :CLOSED
        SUSPENDED: :SUSPENDED
        PENDING: :PENDING

        def self.values: -> ::Array[Lithic::Models::FinancialAccount::status]
      end

      type type_ =
        :ISSUING
        | :RESERVE
        | :OPERATING
        | :CHARGED_OFF_FEES
        | :CHARGED_OFF_INTEREST
        | :CHARGED_OFF_PRINCIPAL

      class Type < Lithic::Enum
        ISSUING: :ISSUING
        RESERVE: :RESERVE
        OPERATING: :OPERATING
        CHARGED_OFF_FEES: :CHARGED_OFF_FEES
        CHARGED_OFF_INTEREST: :CHARGED_OFF_INTEREST
        CHARGED_OFF_PRINCIPAL: :CHARGED_OFF_PRINCIPAL

        def self.values: -> ::Array[Lithic::Models::FinancialAccount::type_]
      end

      type status_change_reason =
        :CHARGED_OFF_DELINQUENT
        | :CHARGED_OFF_FRAUD
        | :END_USER_REQUEST
        | :BANK_REQUEST
        | :DELINQUENT

      class StatusChangeReason < Lithic::Enum
        CHARGED_OFF_DELINQUENT: :CHARGED_OFF_DELINQUENT
        CHARGED_OFF_FRAUD: :CHARGED_OFF_FRAUD
        END_USER_REQUEST: :END_USER_REQUEST
        BANK_REQUEST: :BANK_REQUEST
        DELINQUENT: :DELINQUENT

        def self.values: -> ::Array[Lithic::Models::FinancialAccount::status_change_reason]
      end
    end
  end
end
