module Lithic
  module Models
    module Reports
      module Settlement
        type network_total_list_params =
          {
            begin_: Time,
            end_: Time,
            ending_before: String,
            institution_id: String,
            network: Lithic::Models::Reports::Settlement::NetworkTotalListParams::network,
            page_size: Integer,
            report_date: Date,
            report_date_begin: Date,
            report_date_end: Date,
            settlement_institution_id: String,
            starting_after: String
          }
          & Lithic::request_parameters

        class NetworkTotalListParams < Lithic::BaseModel
          extend Lithic::RequestParameters::Converter
          include Lithic::RequestParameters

          attr_reader begin_: Time?

          def begin_=: (Time) -> Time

          attr_reader end_: Time?

          def end_=: (Time) -> Time

          attr_reader ending_before: String?

          def ending_before=: (String) -> String

          attr_reader institution_id: String?

          def institution_id=: (String) -> String

          attr_reader network: Lithic::Models::Reports::Settlement::NetworkTotalListParams::network?

          def network=: (
            Lithic::Models::Reports::Settlement::NetworkTotalListParams::network
          ) -> Lithic::Models::Reports::Settlement::NetworkTotalListParams::network

          attr_reader page_size: Integer?

          def page_size=: (Integer) -> Integer

          attr_reader report_date: Date?

          def report_date=: (Date) -> Date

          attr_reader report_date_begin: Date?

          def report_date_begin=: (Date) -> Date

          attr_reader report_date_end: Date?

          def report_date_end=: (Date) -> Date

          attr_reader settlement_institution_id: String?

          def settlement_institution_id=: (String) -> String

          attr_reader starting_after: String?

          def starting_after=: (String) -> String

          def initialize: (
            ?begin_: Time,
            ?end_: Time,
            ?ending_before: String,
            ?institution_id: String,
            ?network: Lithic::Models::Reports::Settlement::NetworkTotalListParams::network,
            ?page_size: Integer,
            ?report_date: Date,
            ?report_date_begin: Date,
            ?report_date_end: Date,
            ?settlement_institution_id: String,
            ?starting_after: String,
            ?request_options: Lithic::request_opts
          ) -> void

          def to_hash: -> Lithic::Models::Reports::Settlement::network_total_list_params

          type network = :VISA | :MASTERCARD | :MAESTRO | :INTERLINK

          class Network < Lithic::Enum
            VISA: :VISA
            MASTERCARD: :MASTERCARD
            MAESTRO: :MAESTRO
            INTERLINK: :INTERLINK

            def self.values: -> ::Array[Lithic::Models::Reports::Settlement::NetworkTotalListParams::network]
          end
        end
      end
    end
  end
end
