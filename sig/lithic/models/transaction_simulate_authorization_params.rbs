module Lithic
  module Models
    type transaction_simulate_authorization_params =
      {
        amount: Integer,
        descriptor: String,
        pan: String,
        mcc: String,
        merchant_acceptor_id: String,
        merchant_amount: Integer,
        merchant_currency: String,
        partial_approval_capable: bool,
        pin: String,
        status: Lithic::Models::TransactionSimulateAuthorizationParams::status
      }
      & Lithic::Internal::Type::request_parameters

    class TransactionSimulateAuthorizationParams < Lithic::Internal::Type::BaseModel
      extend Lithic::Internal::Type::RequestParameters::Converter
      include Lithic::Internal::Type::RequestParameters

      attr_accessor amount: Integer

      attr_accessor descriptor: String

      attr_accessor pan: String

      attr_reader mcc: String?

      def mcc=: (String) -> String

      attr_reader merchant_acceptor_id: String?

      def merchant_acceptor_id=: (String) -> String

      attr_reader merchant_amount: Integer?

      def merchant_amount=: (Integer) -> Integer

      attr_reader merchant_currency: String?

      def merchant_currency=: (String) -> String

      attr_reader partial_approval_capable: bool?

      def partial_approval_capable=: (bool) -> bool

      attr_reader pin: String?

      def pin=: (String) -> String

      attr_reader status: Lithic::Models::TransactionSimulateAuthorizationParams::status?

      def status=: (
        Lithic::Models::TransactionSimulateAuthorizationParams::status
      ) -> Lithic::Models::TransactionSimulateAuthorizationParams::status

      def initialize: (
        amount: Integer,
        descriptor: String,
        pan: String,
        ?mcc: String,
        ?merchant_acceptor_id: String,
        ?merchant_amount: Integer,
        ?merchant_currency: String,
        ?partial_approval_capable: bool,
        ?pin: String,
        ?status: Lithic::Models::TransactionSimulateAuthorizationParams::status,
        ?request_options: Lithic::request_opts
      ) -> void

      def to_hash: -> {
        amount: Integer,
        descriptor: String,
        pan: String,
        mcc: String,
        merchant_acceptor_id: String,
        merchant_amount: Integer,
        merchant_currency: String,
        partial_approval_capable: bool,
        pin: String,
        status: Lithic::Models::TransactionSimulateAuthorizationParams::status,
        request_options: Lithic::RequestOptions
      }

      type status =
        :AUTHORIZATION
        | :BALANCE_INQUIRY
        | :CREDIT_AUTHORIZATION
        | :FINANCIAL_AUTHORIZATION
        | :FINANCIAL_CREDIT_AUTHORIZATION

      module Status
        extend Lithic::Internal::Type::Enum

        AUTHORIZATION: :AUTHORIZATION
        BALANCE_INQUIRY: :BALANCE_INQUIRY
        CREDIT_AUTHORIZATION: :CREDIT_AUTHORIZATION
        FINANCIAL_AUTHORIZATION: :FINANCIAL_AUTHORIZATION
        FINANCIAL_CREDIT_AUTHORIZATION: :FINANCIAL_CREDIT_AUTHORIZATION

        def self?.values: -> ::Array[Lithic::Models::TransactionSimulateAuthorizationParams::status]
      end
    end
  end
end
