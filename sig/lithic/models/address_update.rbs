module Lithic
  module Models
    type address_update =
      {
        :address1 => String,
        :address2 => String,
        city: String,
        country: String,
        postal_code: String,
        state: String
      }

    class AddressUpdate < Lithic::Internal::Type::BaseModel
      attr_reader address1: String?

      def address1=: (String) -> String

      attr_reader address2: String?

      def address2=: (String) -> String

      attr_reader city: String?

      def city=: (String) -> String

      attr_reader country: String?

      def country=: (String) -> String

      attr_reader postal_code: String?

      def postal_code=: (String) -> String

      attr_reader state: String?

      def state=: (String) -> String

      def initialize: (
        ?address1: String,
        ?address2: String,
        ?city: String,
        ?country: String,
        ?postal_code: String,
        ?state: String
      ) -> void
    end
  end
end
