module Lithic
  module Models
    type card_update_params =
      {
        digital_card_art_token: String,
        memo: String,
        pin: String,
        pin_status: Lithic::Models::CardUpdateParams::pin_status,
        spend_limit: Integer,
        spend_limit_duration: Lithic::Models::spend_limit_duration,
        state: Lithic::Models::CardUpdateParams::state
      }
      & Lithic::Internal::Type::request_parameters

    class CardUpdateParams < Lithic::Internal::Type::BaseModel
      extend Lithic::Internal::Type::RequestParameters::Converter
      include Lithic::Internal::Type::RequestParameters

      attr_reader digital_card_art_token: String?

      def digital_card_art_token=: (String) -> String

      attr_reader memo: String?

      def memo=: (String) -> String

      attr_reader pin: String?

      def pin=: (String) -> String

      attr_reader pin_status: Lithic::Models::CardUpdateParams::pin_status?

      def pin_status=: (
        Lithic::Models::CardUpdateParams::pin_status
      ) -> Lithic::Models::CardUpdateParams::pin_status

      attr_reader spend_limit: Integer?

      def spend_limit=: (Integer) -> Integer

      attr_reader spend_limit_duration: Lithic::Models::spend_limit_duration?

      def spend_limit_duration=: (
        Lithic::Models::spend_limit_duration
      ) -> Lithic::Models::spend_limit_duration

      attr_reader state: Lithic::Models::CardUpdateParams::state?

      def state=: (
        Lithic::Models::CardUpdateParams::state
      ) -> Lithic::Models::CardUpdateParams::state

      def initialize: (
        ?digital_card_art_token: String,
        ?memo: String,
        ?pin: String,
        ?pin_status: Lithic::Models::CardUpdateParams::pin_status,
        ?spend_limit: Integer,
        ?spend_limit_duration: Lithic::Models::spend_limit_duration,
        ?state: Lithic::Models::CardUpdateParams::state,
        ?request_options: Lithic::request_opts
      ) -> void

      type pin_status = :OK

      module PinStatus
        extend Lithic::Internal::Type::Enum

        OK: :OK

        def self?.values: -> ::Array[Lithic::Models::CardUpdateParams::pin_status]
      end

      type state = :CLOSED | :OPEN | :PAUSED

      module State
        extend Lithic::Internal::Type::Enum

        CLOSED: :CLOSED
        OPEN: :OPEN
        PAUSED: :PAUSED

        def self?.values: -> ::Array[Lithic::Models::CardUpdateParams::state]
      end
    end
  end
end
