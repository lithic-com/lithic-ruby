module Lithic
  module Models
    type external_bank_account_address =
      {
        :address1 => String,
        city: String,
        country: String,
        postal_code: String,
        state: String,
        :address2 => String
      }

    class ExternalBankAccountAddress < Lithic::Internal::Type::BaseModel
      attr_accessor address1: String

      attr_accessor city: String

      attr_accessor country: String

      attr_accessor postal_code: String

      attr_accessor state: String

      attr_reader address2: String?

      def address2=: (String) -> String

      def initialize: (
        address1: String,
        city: String,
        country: String,
        postal_code: String,
        state: String,
        ?address2: String
      ) -> void

      def to_hash: -> Lithic::Models::external_bank_account_address
    end
  end
end
