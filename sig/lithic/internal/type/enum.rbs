module Lithic
  module Internal
    module Type
      module Enum
        include Lithic::Internal::Type::Converter

        def self.values: -> ::Array[(nil | bool | Integer | Float | Symbol)]

        private def self.finalize!: -> void

        def ===: (top other) -> bool

        def ==: (top other) -> bool

        def coerce: (
          String | Symbol | top value,
          state: Lithic::Internal::Type::Converter::coerce_state
        ) -> (Symbol | top)

        def dump: (
          Symbol | top value,
          state: Lithic::Internal::Type::Converter::dump_state
        ) -> (Symbol | top)

        def inspect: (?depth: Integer) -> String
      end
    end
  end
end
