module Lithic
  module Resources
    class AccountHolders
      def create: (
        beneficial_owner_entities: ::Array[Lithic::Models::AccountHolderCreateParams::BeneficialOwnerEntity],
        beneficial_owner_individuals: ::Array[Lithic::Models::AccountHolderCreateParams::BeneficialOwnerIndividual],
        business_entity: Lithic::Models::AccountHolderCreateParams::BusinessEntity,
        control_person: Lithic::Models::AccountHolderCreateParams::ControlPerson,
        nature_of_business: String,
        tos_timestamp: String,
        workflow: Lithic::Models::AccountHolderCreateParams::workflow,
        individual: Lithic::Models::AccountHolderCreateParams::Individual,
        address: Lithic::Models::Address,
        email: String,
        first_name: String,
        kyc_exemption_type: Lithic::Models::AccountHolderCreateParams::kyc_exemption_type,
        last_name: String,
        phone_number: String,
        ?external_id: String,
        ?kyb_passed_timestamp: String,
        ?website_url: String,
        ?kyc_passed_timestamp: String,
        ?business_account_token: String,
        ?request_options: Lithic::request_opts
      ) -> Lithic::Models::AccountHolderCreateResponse

      def retrieve: (
        String account_holder_token,
        ?request_options: Lithic::request_opts
      ) -> Lithic::Models::AccountHolder

      def update: (
        String account_holder_token,
        ?business_account_token: String,
        ?email: String,
        ?phone_number: String,
        ?request_options: Lithic::request_opts
      ) -> Lithic::Models::AccountHolderUpdateResponse

      def list: (
        ?begin_: Time,
        ?email: String,
        ?end_: Time,
        ?ending_before: String,
        ?external_id: String,
        ?first_name: String,
        ?last_name: String,
        ?legal_business_name: String,
        ?limit: Integer,
        ?phone_number: String,
        ?starting_after: String,
        ?request_options: Lithic::request_opts
      ) -> Lithic::SinglePage[Lithic::Models::AccountHolder]

      def list_documents: (
        String account_holder_token,
        ?request_options: Lithic::request_opts
      ) -> Lithic::Models::AccountHolderListDocumentsResponse

      def retrieve_document: (
        String document_token,
        account_holder_token: String,
        ?request_options: Lithic::request_opts
      ) -> Lithic::Models::Document

      def simulate_enrollment_document_review: (
        document_upload_token: String,
        status: Lithic::Models::AccountHolderSimulateEnrollmentDocumentReviewParams::status,
        ?accepted_entity_status_reasons: ::Array[String],
        ?status_reason: Lithic::Models::AccountHolderSimulateEnrollmentDocumentReviewParams::status_reason,
        ?request_options: Lithic::request_opts
      ) -> Lithic::Models::Document

      def simulate_enrollment_review: (
        ?account_holder_token: String,
        ?status: Lithic::Models::AccountHolderSimulateEnrollmentReviewParams::status,
        ?status_reasons: ::Array[Lithic::Models::AccountHolderSimulateEnrollmentReviewParams::status_reason],
        ?request_options: Lithic::request_opts
      ) -> Lithic::Models::AccountHolderSimulateEnrollmentReviewResponse

      def upload_document: (
        String account_holder_token,
        document_type: Lithic::Models::AccountHolderUploadDocumentParams::document_type,
        entity_token: String,
        ?request_options: Lithic::request_opts
      ) -> Lithic::Models::Document

      def initialize: (client: Lithic::Client) -> void
    end
  end
end
